name: Tests

on:
  push:
    branches: [ main, develop, claude/** ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    name: PHPUnit Tests (PHP ${{ matrix.php-version }})
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        php-version: ['7.4', '8.0', '8.1', '8.2']

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup PHP ${{ matrix.php-version }}
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-version }}
          extensions: mbstring, xml, ctype, json, mysql
          coverage: xdebug
          tools: composer:v2

      - name: Validate composer.json
        run: composer validate --strict

      - name: Get Composer cache directory
        id: composer-cache
        run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

      - name: Cache Composer dependencies
        uses: actions/cache@v3
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Install Composer dependencies
        run: composer install --prefer-dist --no-progress --no-suggest --no-interaction

      - name: Create .env for tests
        run: |
          cp .env.example .env
          echo "SEMPA_DB_PASSWORD=test_password" >> .env

      - name: Run PHPUnit tests
        run: composer test

      - name: Generate code coverage report
        if: matrix.php-version == '8.1'
        run: composer test:coverage

      - name: Upload coverage to Codecov
        if: matrix.php-version == '8.1'
        uses: codecov/codecov-action@v3
        with:
          files: ./coverage/clover.xml
          flags: unittests
          name: codecov-umbrella

  lint:
    name: Code Quality Checks
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.1'
          tools: composer:v2, phpcs

      - name: Install dependencies
        run: composer install --prefer-dist --no-progress

      - name: Check PHP syntax errors
        run: find . -name "*.php" -not -path "./vendor/*" -exec php -l {} \;

      - name: Check for TODO comments
        run: |
          if grep -r "TODO\|FIXME" --include="*.php" --exclude-dir=vendor .; then
            echo "⚠️ Found TODO/FIXME comments in code"
            exit 0
          fi

  security:
    name: Security Checks
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.1'
          tools: composer:v2

      - name: Install dependencies
        run: composer install --prefer-dist --no-progress

      - name: Check for .env file (should not be committed)
        run: |
          if [ -f .env ]; then
            echo "❌ .env file found in repository!"
            exit 1
          else
            echo "✅ .env file not found (good)"
          fi

      - name: Check for hardcoded credentials
        run: |
          if grep -r "password.*=.*['\"][^'\"]*['\"]" --include="*.php" --exclude-dir=vendor . | grep -v ".env\|example\|test"; then
            echo "⚠️ Potential hardcoded credentials found"
            exit 1
          fi

      - name: Security audit (Composer)
        run: composer audit || true

  badge:
    name: Update README badges
    runs-on: ubuntu-latest
    needs: [test, lint, security]
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Update badge
        run: echo "Badges updated"
